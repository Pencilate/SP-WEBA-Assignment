<nav aria-label="breadcrumb">
    <ol class="breadcrumb ">
        <li class="breadcrumb-item font-small">
            <a asp-controller="Home" asp-action="Index">Home</a>
        </li>
        <li class="breadcrumb-item font-small">
            <a asp-controller="CustomerAccounts" asp-action="Index">Manage Customer Accounts</a>
        </li>
        <li class="breadcrumb-item font-small">
            <a href="/CustomerAccounts/ManageInstructorAssignment/" class="MIALink">Manage Instructor Assignment</a>
        </li>
        <li class="breadcrumb-item font-small active">Assign Instructor to Customer Account</li>
        <li class="breadcrumb-item font-small">
            <a href="/CustomerAccounts/AssignInstructorsV2/" id="AIV2Link">V2</a>
        </li>
    </ol>
</nav>

<div class="card">
    <div class="card-header stylish-color-dark white-text" style="position:sticky; top: 5em; z-index: 100;">
        <div class="container-fluid d-flex">
            <h4 class="one" style="padding-top:1.8%;width:80%">Assign instructor(s) to <span id="accountNameTitle">Account Name</span></h4>
            <a href="/CustomerAccounts/ManageInstructorAssignment/" id="backBtn" class="MIALink btn btn-secondary" style="text-align:center;">Back</a>
            <button type="button" id="assignInstrctorSubmitBtn" class="btn btn-primary" style="margin-left:auto">Submit</button>
        </div>
        <div class="alert alert-info" role="alert">
            <span id="alertMsg">Please select a instructor using the respective radio button and fill in their respective wage rate.</span>
        </div>
    </div>
    <div class="card-body col-12" style="padding:1% 3%">
        @*<div class="alert alert-info" role="alert">
            <span id="alertMsg">Please select a instructor using the respective radio button and fill in their respective wage rate.</span>
        </div>*@
        <div class="row justify-content-center" id="paginationOptions" style="padding: 0.5em 0;">
            <div class="col d-inline">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="pageSizeSelection">Show</label>
                    </div>
                    <select class="custom-select" name="pageSizeSelection" id="pageSizeSelection" style="width:30%;">
                        <option value="5" selected>5</option>
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                    </select>
                    <div class="input-group-append">
                        <label class="input-group-text" for="pageSizeSelection">entries</label>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="sortOrderSelection">Order</label>
                    </div>
                    <select class="custom-select" name="sortOrderSelection" id="sortOrderSelection" style="width:60%;">
                        <option value="ASC" selected>Ascending</option>
                        <option value="DESC">Descending</option>
                    </select>
                </div>
            </div>
            <div class="col">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="searchFilter"> Search</label>
                    </div>
                    <input type="text" name="searchFilter" id="searchFilterInput" class="form-control" />
                </div>

            </div>
        </div>
        <div class="row justify-content-center">
            <nav>
                <ul class="pagination" id="topNav"></ul>
            </nav>
        </div>
        <div class="row">
            <div class="table-responsive-md w-100">
                <div id="topNavigationInterfaceContainer" class="btn-toolbar float-right" role="toolbar"></div>
                <form name="assignInstructorForm" novalidate>
                    <table class="table table-bordered">
                        <thead>
                            <tr class="row m-0" style="vertical-align:central;">
                                <th class="col-md-1">No.</th>
                                <th class="col-md-1">Pick</th>
                                <th class="col-md-2">Wage rate per hour (%)</th>
                                <th class="col-md-2">Full Name</th>
                                <th class="col-md-2">Email</th>
                                <th class="col-md-4">Accounts</th>

                            </tr>
                        </thead>
                        <tbody id="tableBodyElement"></tbody>
                    </table>
                </form>
            </div>
        </div>
        <div class="row justify-content-center">
            <p id="navInfo"></p>
        </div>
        <div class="row justify-content-center">
            <nav>
                <ul class="pagination" id="btmNav"></ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts{
    <link href="~/lib/datepicker/datepicker.min.css" rel="stylesheet" />
    <script src="~/lib/datepicker/datepicker.min.js"></script>
    <style>
        table.table td {
            padding-left: 0.2rem;
            padding-right: 0.2rem;
        }

            table.table th, table.table td.col-md-1, table.table td.col-md-2 {
                padding-left: 0.2rem;
                padding-right: 0.2rem;
                text-align: center;
            }

        .error {
            color: red;
        }

        .valid {
            color: forestgreen;
        }

        .pagination .page-item.disabled .page-link {
            color: white;
        }

        div#deleteAccountRateModal div#accAffectSummary .card-title {
            text-align: center;
            font-size: 12px;
        }

        div#deleteAccountRateModal div#accAffectSummary .card-text {
            text-align: center;
            font-size: 2em;
        }

        div#deleteAccountRateModal div#accAffectSummary .card i {
            text-align: center;
            font-size: 1.5em;
            padding: 0.5em;
        }

        div#deleteAccountRateModal .card {
            padding: 1em;
        }

        div#deleteAccountRateModal .rateDetail i {
            font-size: 1em;
            padding-right: 0.5em;
        }

        div#deleteAccountRateModal .rateDetail .card-text {
            text-align: center;
            font-size: 1.2em;
        }

        .formheight {
            min-height: 6.5em;
        }
    </style>
    <script>
        //Get custoemrID from URL
        const customerID = getIdFromAddressBar();
        function getIdFromAddressBar() {
            let urlArray = window.location.href.split('/');
            let url = urlArray[urlArray.length - 1];
            if ((url.includes('#')) == true) {
                return url.substring(0, url.indexOf('#'));
            } else {
                return url
            }
        }
        $('.MIALink').attr('href', '/CustomerAccounts/ManageInstructorAssignment/' + customerID); //Append customerID to the end of back button anchor href
        $('#AIV2Link').attr('href', '/CustomerAccounts/AssignInstructorsV2/' + customerID); //Append customerID to the end of back button anchor href

        var choosenInstructor;
        var $selectedWageSelect;
        var validator;

        //Pagination parameters
        var pageSize = 5;
        var sortOrder = 'ASC';
        var currentPage;
        var searchTerm = '';

        (function () {
            //Call loadData to populate the page with data
            loadData(1, pageSize, sortOrder, '');

            //Set onChangeListeners for filter options
            $('#pageSizeSelection').on('change', function () {
                pageSize = this.value;
                loadData(1, pageSize, sortOrder, searchTerm);
            });
            $('#sortOrderSelection').on('change', function () {
                sortOrder = this.value;
                loadData(currentPage, pageSize, sortOrder, searchTerm);
            });

            $('#searchFilterInput').on('change', function () {
                searchTerm = this.value;
                loadData(1, pageSize, sortOrder, searchTerm)
            });

        })();

        function loadData(pageNo, perPageSize, prefSortOrder, prefSearchTerm) {
             //Call AJAX to retrieve all AccountRate data
            $.ajax({
                url: `/API/Instructors/GetAllInstructorPaginated/${customerID}?page_number=${pageNo}&per_page=${perPageSize}&sort_order=${prefSortOrder}&search_term=${prefSearchTerm}`,
                method: 'GET'
            }).done(function (data) {
                console.dir(data);
                //Set title of page
                $('#accountNameTitle').text(data.accountName);

                //Data required for pagination
                let totalRecCount = data.totalRecordCount;
                let totalCurrentPageRecord = data.totalCurrentPgRec;
                currentPage = data.currentPage;
                let totalPages = data.totalPage;
                let fromRec = data.from;
                let toRec = data.to;

                //Call renderData function to populate the table body
                renderData(data.records);
                //Call function to create navigation properties
                if (totalPages != 0) {
                    createPageNav($('#topNav'), currentPage, totalPages);
                    createPageNav($('#btmNav'), currentPage, totalPages);
                }
                //Populate the navigation state message
                let $navInfo = $('#navInfo');
                $navInfo.empty();
                $navInfo.text(`Showing ${fromRec} to ${toRec} of ${totalRecCount} entries`);

                $('div.alert').removeClass('alert-danger').addClass('alert-info');
                $('#alertMsg').text("Please select a instructor using the respective radio button and fill in their respective wage rate");
                $('.wageSelectionTD select').on('change', function () {
                    if ($("form[name='assignInstructorForm']").valid() == true) {
                        $('div.alert').removeClass('alert-danger').addClass('alert-info');
                        $('#alertMsg').text("Please select a instructor using the respective radio button and fill in their respective wage rate");
                    }
                })

            }).fail(function (data) {
                new Noty({ text: "Fail to load customer account rate data. " + data.responseJSON.message, type: 'error', timeout: 3000 }).show();
            });
        }

        function renderData(data) {
            $tableBodyElement = $('#tableBodyElement');
            $tableBodyElement.empty();//Clear all html within the table body
            for (let i = 0; i < data.length; i++) {
                oneIA = data[i];
                console.dir(oneIA);
                //Populating one table row
                let $cusTR = $("<tr></tr");
                $cusTR.addClass("row m-0");

                $cusTR.append($("<td></td>", { text: oneIA.no }).addClass("col-md-1"));
                if (oneIA.isAlreadyAssignedToCustomer == true) {
                    $cusTR.append($("<td></td>").addClass("col-md-1").append('<i class="fas fa-check" style="color:#61d800;"></i>'));
                    $assignedWageSelect = $(`
                        <select class="custom-select" name="wageSelection"  class="custom-select" value="${oneIA.wageRate}" disabled>
                            <option value="">Choose</option>
                            <option value="50">50</option>
                            <option value="55">55</option>
                            <option value="60">60</option>
                            <option value="65">65</option>
                            <option value="70">70</option>
                            <option value="75">75</option>
                            <option value="80">80</option>
                        </select>
                    `)
                    $cusTR.append($(`<td></td>`).addClass("col-md-2").append($assignedWageSelect));
                    $assignedWageSelect.val(oneIA.wageRate);
                } else {
                    $radioEle = $(`<input type="radio" class="form-check-input" name="assignRadio" class="assignRadio" value="${oneIA.id}"></input>`)
                    $radioEle.on('click', function () {
                        $('.wageSelectionTD').children().val('');
                        $('.wageSelectionTD').children().prop('disabled', true);
                        choosenInstructor = $(this).val();
                        console.log('Chosen Instructor: ' + choosenInstructor);
                        $selectedWageSelect = $(this).parent().next().children()
                        $selectedWageSelect.removeAttr('disabled');
                        validator.resetForm();
                    })
                    $cusTR.append($(`<td></td>`).addClass("col-md-1").append($radioEle));

                    $cusTR.append($(`<td class="wageSelectionTD">
                        <select class="custom-select" name="wageSelection" class="custom-select" disabled>
                            <option value="">Choose</option>
                            <option value="50">50</option>
                            <option value="55">55</option>
                            <option value="60">60</option>
                            <option value="65">65</option>
                            <option value="70">70</option>
                            <option value="75">75</option>
                            <option value="80">80</option>
                        </select>
                    </td>`).addClass("col-md-2"));
                }
                $cusTR.append($("<td></td>", { text: oneIA.name }).addClass("col-md-2"));
                $cusTR.append($("<td></td>", { text: oneIA.email }).addClass("col-md-2"));
                $cusTR.append($("<td></td>", { text: oneIA.accountsAssigned }).addClass("col-md-4"));

                //Append populated table row into table body
                $tableBodyElement.append($cusTR);
            }
        }

        function createPageNav($navElm, currentPage, totalPages) {
            $navElm.empty(); //Clear html within navigation element

            //Previous button
            let $liPrev = $('<li></li>').addClass('page-item');
            //Check if current page is first page
            if (currentPage == 1) {
                $liPrev.addClass('disabled');
                let $a = $('<a>Previous</a>').addClass('page-link').attr('href', '#').attr('tabindex', '-1');
                $liPrev.append($a);
            }
            else {
                //Set data of previous button as well as onClickListenser
                let $a = $('<a>Previous</a>').addClass('page-link').attr('href', '#').attr('data-page-number', currentPage - 1).attr('data-page-size', pageSize).attr('data-sort-order', sortOrder).attr('data-search', searchTerm);
                $a.on('click', function (event) {
                    let perPageSize = $(event.target).data('page-size');
                    let pageNumber = $(event.target).data('page-number');
                    let prefSortOrder = $(event.target).data('sort-order');
                    let prefSearchTerm = $(event.target).data('search');
                    loadData(pageNumber, perPageSize, prefSortOrder, prefSearchTerm);
                })
                $liPrev.append($a);
            }
            $navElm.append($liPrev);

            //Page buttons
            //Create button for each page
            for (let i = 1; i <= totalPages; i++) {
                let $li = $('<li></li>').addClass('page-item');
                //If its current page make the page number disabled
                if (i == currentPage) {
                    $li.addClass('active disabled');
                    let $a = $(`<a>${i}</a>`).addClass('page-link').attr('href', '#').attr('tabindex', '-1');
                    $li.append($a);
                }
                else {//Other pages other than current page
                    //Set data of the page button as well as onClickListenser
                    let $a = $(`<a>${i}</a>`).addClass('page-link').attr('href', '#').attr('data-page-number', i).attr('data-page-size', pageSize).attr('data-sort-order', sortOrder).attr('data-search', searchTerm);
                    $a.on('click', function (event) {
                        let perPageSize = $(event.target).data('page-size');
                        let pageNumber = $(event.target).data('page-number');
                        let prefSortOrder = $(event.target).data('sort-order');
                        let prefSearchTerm = $(event.target).data('search');
                        loadData(pageNumber, perPageSize, prefSortOrder, prefSearchTerm);
                    })
                    $li.append($a);
                }
                $navElm.append($li);

            }

            //Next button
            let $liNext = $('<li></li>').addClass('page-item');
            //Check if current page is last page
            if (currentPage == totalPages) {
                $liNext.addClass('disabled');
                let $a = $('<a>Next</a>').addClass('page-link').attr('href', '#').attr('tabindex', '-1');
                $liNext.append($a);
            }
            else {
                //Set data of the page button as well as onClickListenser
                let $a = $('<a>Next</a>').addClass('page-link').attr('href', '#').attr('data-page-number', currentPage + 1).attr('data-page-size', pageSize).attr('data-sort-order', sortOrder).attr('data-search', searchTerm);
                $a.on('click', function (event) {
                    let perPageSize = $(event.target).data('page-size');
                    let pageNumber = $(event.target).data('page-number');
                    let prefSortOrder = $(event.target).data('sort-order');
                    let prefSearchTerm = $(event.target).data('search');
                    loadData(pageNumber, perPageSize, prefSortOrder, prefSearchTerm);
                })
                $liNext.append($a);
            }
            $navElm.append($liNext);
        }

        //IIFE function for jQuery-validation
        (function () {

            $("form[name='assignInstructorForm']").validate({
                success: 'valid',
                focusCleanup: true,
                rules: {
                    assignRadio: {
                        required: true,
                        //require_from_group: [1, ".assignRadio"]
                    },
                    wageSelection: {
                        //required: true,
                        require_from_group: [1, ".wageSelectionTD select"]
                    }
                },
                messages: {
                    assignRadio: {
                        //require_from_group: 'Please pick a instructor.'
                        required: 'Please pick a instructor.'
                    },
                    wageSelection: {
                        require_from_group: 'Please pick a wage.'
                    }
                },
                errorPlacement: function (error, element) {
                    console.dir(error);
                    console.dir(element);
                    console.dir("ErrorPlacement Funciton Ran");

                    return false;
                    //if (element.parent().is($('div.input-group'))) {
                    //    error.appendTo(element.parent().parent());
                    //}
                    //else {
                    //    //error.appendTo(element.parent());
                    //    error.appendTo(element.next());
                    //}

                    //element.parent().append(error);
                    //error.appendTo(element.parent());
                    //error.appendTo($(`input[value="${choosenInstructor}"]`).parent().next());
                    //error.appendTo($selectedWageSelect.parent());

                    //$radioSel = window.eval($(`input[value="${choosenInstructor}"]`));
                    //error.appendTo($radioSel.parent().next());
                    

                    //function setErrorMsg(error) {
                    //    $(`input[name="assignRadio"]`).each(function (index, data) {
                    //        if ($(this).val() == choosenInstructor) {
                    //            console.log($(this).parent().next().append(error));
                    //        }
                    //    });
                    //}
                    
                    //setErrorMsg(error);

                    //$('.error').parent().append(error);
                    //error.insertAfter($(`input[value="${choosenInstructor}"]`).parent().next().children());
                },
                invalidHandler: function (form, validator) {
                    var errors = validator.numberOfInvalids();
                    errors += " error(s) found: "
                    if (errors) {
                        if (validator.errorList.length > 0) {
                            for (x = 0; x < validator.errorList.length; x++) {
                                errors += validator.errorList[x].message;
                            }
                        }
                        $('div.alert').removeClass('alert-info').addClass('alert-danger');
                        $('#alertMsg').text(errors);

                        $('#wageSelectionerror').remove();
                        $(`input[value="${choosenInstructor}"]`).parent().next().append('<label id="wageSelectionerror" class="error" for="wageSelection" style="">Please pick a wage.</label>');
                    }
                }
            });


        })();




        function WebFormData(iCustomerId, iInstructorId, iWage) {
            this.customerId = iCustomerId;
            this.instructorId = iInstructorId;
            this.wageRate = iWage;
        }
        //Do select Validation
        $('#assignInstrctorSubmitBtn').on('click', function () {
            if ($("form[name='assignInstructorForm']").valid() == true) {
                $('div.alert').removeClass('alert-danger').addClass('alert-info');
                $('#alertMsg').text("Please select a instructor using the respective radio button and fill in their respective wage rate");

                let wage = $selectedWageSelect.val()
                console.log('Selected Wage: ' + wage);
                let webFormData = new WebFormData(customerID, choosenInstructor, wage);
                console.dir(webFormData);

                $.ajax({
                    method: 'POST',
                    url: '/API/Instructors/Assign',
                    data: webFormData,
                    contentType: 'application/x-www-form-urlencoded',
                    datatype: 'application/json'
                }).done(function (data) {
                    new Noty({ text: data.message, type: 'success', timeout: 3000 }).show();
                    loadData(currentPage, pageSize, sortOrder, searchTerm);
                }).fail(function (data) {
                    new Noty({ text: data.responseJSON.message, type: 'error', timeout: 5000 }).show();

                });
            }
            //else {
            //    setSelectElementError();
            //}
        });

        //function setSelectElementError() {
        //    $('#wageSelectionerror').remove();
        //    $(`input[value="${choosenInstructor}"]`).parent().next().append('<label id="wageSelectionerror" class="error" for="wageSelection" style="">Please pick a wage.</label>');
        //}

    </script>
}